import { WeatherVariable, WeatherVariableIDValue } from "./types/weatherPayload";
/**
 * Contains a source URL with a Unix timestamps in milliseconds
 */
export type SourceAndUnixTimestamp = {
    source: string;
    timestamp: number;
};
export declare class WeatherDataHandler {
    static fetchLatest(apiKey: string, maptilerSessionId: string): Promise<void>;
    static getDataForWeatherVariableID(id: WeatherVariableIDValue): WeatherVariable | null;
    static hasData(): boolean;
    static getTemperatureData(): WeatherVariable | null;
    static getPressureData(): WeatherVariable | null;
    static getPrecipitationData(): WeatherVariable | null;
    static getCloudCoverData(): WeatherVariable | null;
    static getFrozenPrecipitationData(): WeatherVariable | null;
    static getRadarData(): WeatherVariable | null;
    static getWindData(): WeatherVariable | null;
    static getSourcesAndTimestamps(wv: WeatherVariable, apiKey: string, maptilerSessionId: string): Array<SourceAndUnixTimestamp>;
}
