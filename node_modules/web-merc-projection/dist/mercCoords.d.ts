import { Point, BBox, Sources } from './mercProj.spec.js';

declare function llToPX(ll: Point, zoom: number, antiMeridian?: boolean, tileSize?: number): Point;
declare function pxToLL(px: Point, zoom: number, tileSize?: number): Point;
declare function llToMerc(ll: Point): Point;
declare function mercToLL(merc: Point): Point;
declare function pxToTile(px: Point, tileSize?: number): Point;
declare function tilePxBounds(tile: [zoom: number, x: number, y: number], tileSize?: number): BBox;
declare function llToTile(ll: Point, zoom: number, tileSize?: number): Point;
declare function llToTilePx(ll: Point, tile: [zoom: number, x: number, y: number], tileSize?: number): Point;
declare function convert(bbox: BBox, outSource: Sources): BBox;
declare function xyzToBBOX(x: number, y: number, zoom: number, tmsStyle?: boolean, source?: Sources, tileSize?: number): BBox;
declare function bboxToXYZBounds(bbox: BBox, zoom: number, tmsStyle?: boolean, source?: Sources, tileSize?: number): {
    minX: number;
    maxX: number;
    minY: number;
    maxY: number;
};
declare function mercatorXfromLng(lng: number): number;
declare function mercatorYfromLat(lat: number): number;
declare function mercatorZfromAltitude(altitude: number, lat: number): number;
declare function lngFromMercatorX(x: number): number;
declare function latFromMercatorY(y: number): number;
declare function altitudeFromMercatorZ(z: number, y: number): number;
declare function mercatorLatScale(lat: number): number;

export { altitudeFromMercatorZ, bboxToXYZBounds, convert, latFromMercatorY, llToMerc, llToPX, llToTile, llToTilePx, lngFromMercatorX, mercToLL, mercatorLatScale, mercatorXfromLng, mercatorYfromLat, mercatorZfromAltitude, pxToLL, pxToTile, tilePxBounds, xyzToBBOX };
