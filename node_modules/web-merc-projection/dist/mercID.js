function u(r,n,t){return BigInt(((1<<r)*t+n)*32+r)}function i(r){let n=Number(r),t=n%32;n=(n-t)/32;let e=n%(1<<t),o=(n-e)/(1<<t);return[t,e,o]}function p(r){let[n,t,e]=i(r);return[u(n+1,t*2,e*2),u(n+1,t*2+1,e*2),u(n+1,t*2,e*2+1),u(n+1,t*2+1,e*2+1)]}function l(r,n,t){let e=[];return n-1>=0&&e.push([r,n-1,t]),n+1<1<<r&&e.push([r,n+1,t]),t-1>=0&&e.push([r,n,t-1]),t+1<1<<r&&e.push([r,n,t+1]),e}function m(r){let[n,t,e]=i(r);return u(n-1,Math.floor(t/2),Math.floor(e/2))}function x(r,n){if(n!==void 0){let[t]=i(r);for(;n<t;)r=m(r),t--}return i(r)}function a(r,n){let[t,e,o]=i(r),[b,c,f]=i(n);if(t>b)return!1;if(t===b)return e===c&&o===f;{let s=(1<<b-t)-1;return e===(c&~s)&&o===(f&~s)}}function h(r){let[n]=i(r);return n===0}function I(r){let[n]=i(r);return n}export{p as children,a as contains,i as fromID,h as isFace,I as level,l as neighborsXY,m as parent,u as toID,x as toIJ};
//# sourceMappingURL=mercID.js.map