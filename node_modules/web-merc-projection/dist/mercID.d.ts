declare function toID(zoom: number, x: number, y: number): bigint;
declare function fromID(idB: bigint): [zoom: number, x: number, y: number];
declare function children(id: bigint): [blID: bigint, brID: bigint, tlID: bigint, trID: bigint];
declare function neighborsXY(zoom: number, x: number, y: number): Array<[zoom: number, x: number, y: number]>;
declare function parent(id: bigint): bigint;
declare function toIJ(id: bigint, level?: number | bigint): [zoom: number, i: number, j: number];
declare function contains(parentID: bigint, childID: bigint): boolean;
declare function isFace(id: bigint): boolean;
declare function level(id: bigint): number;

export { children, contains, fromID, isFace, level, neighborsXY, parent, toID, toIJ };
